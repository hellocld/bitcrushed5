@ /lines root:video {
  #%autostart true
  #%praxis.version 4.2.0
  .renderer OpenGL
  .width 800
  .fps 60
  @ ./screen video:output {
    #%graph.x 1274
    #%graph.y 152
    .always-on-top true
    .show-cursor true
  }
  @ ./p3d-1 video:gl:p3d {
    #%graph.x 82
    #%graph.y 152
    .code "

    @Inject Property y;
    @Inject Property camRotX;
    
    @Override
    public void setup() 
    \{
    \}

    @Override
    public void update()
    \{
        if(!y.isAnimating())
        \{
            y.set(0).to(TWO_PI).in(10);
        \}
        
        if(!camRotX.isAnimating())
            camRotX.to(-300, 300).in(3).easeInOut();
    \}
    
    @Override
    public void draw() 
    \{
        background(0);
        camera(sin(d(y)) * 800, sin(d(y)) * 300, cos(d(y)) * 800,
                0, 0, 0,
                0, 1, 0);
        noFill();
        stroke((acos(d(y)) + 1) * 127, (sin(d(y)) + 1) * 127, (cos(d(y)) + 1) * 127);
        strokeWeight(1);
        //rotateY(d(y));
        sphere(500 - sin(d(y)) * 100);
        stroke((sin(d(y)) + 1) * 127, (cos(d(y)) + 1) * 127, (acos(d(y)) + 1) * 127);
        //rotateX(d(y));
        sphere(250 + sin(d(y)) * 50);
    \}
"
  }
  @ ./feedback video:custom {
    #%graph.x 357
    #%graph.y 415
    .code "

    @In(1) PImage in;
    
    @P(1) float frameW;
    @P(2) float frameH;
    @P(3) float offsetX;
    @P(4) float offsetY;
    @P(5) float opacity;
    
    @OffScreen PGraphics lastFrame, currentFrame;
    
    @Override
    public void setup() \{

    \}
    
    @Override
    public void draw() \{
        currentFrame.copy(in);
        currentFrame.blendMode(SCREEN, opacity);
        if(lastFrame != null)
            currentFrame.image(
                    lastFrame, 
                    (width - frameW)/2 + offsetX, 
                    (height - frameH)/2 + offsetY, 
                    frameW, 
                    frameH);
        lastFrame.copy(currentFrame);
        copy(currentFrame);
        release(in);
    \}
    
"
    .frame-w 820
    .frame-h 500
    .opacity 0.95
  }
  @ ./p2d-1 video:gl:p2d {
    #%graph.x 161
    #%graph.y 461
    .code "

    @Inject Property prop;
    @Inject Property colR, colG, colB;
    
    @Override
    public void setup() \{
    \}

    @Override
    public void draw() \{
        if(!prop.isAnimating())
            prop.set(100).to(height-120, 0).in(10).easeInOut();
        
        if(!colR.isAnimating())
            colR.set(0).to(255, 0).in(5);
        if(!colG.isAnimating())
            colG.set(0).to(255, 0).in(7);
        if(!colB.isAnimating())
            colB.set(0).to(255, 0).in(9);
        
        
        fill(d(colR), d(colG), d(colB));
        rect(width/2, d(prop), sin(millis()/1000.0) * 200, 20);
    \}
"
  }
  @ ./p3d-2 video:gl:p3d {
    #%graph.x 24
    #%graph.y 254
    #%graph.minimized true
    .code "

    @Inject Property prop;
    @Inject Property colR, colG, colB;
    
    @Override
    public void setup() \{
    \}

    @Override
    public void draw() \{
        camera(0, 0, -300,
                0, 0, 0,
                0, 1, 0);
        if(!prop.isAnimating())
            prop.set(100).to(height-120, 0).in(10).easeInOut();
        
        if(!colR.isAnimating())
            colR.set(0).to(255, 0).in(0.1);
        if(!colG.isAnimating())
            colG.set(0).to(255, 0).in(12);
        if(!colB.isAnimating())
            colB.set(0).to(255, 0).in(21);
        
        
        fill(d(colR), d(colG), d(colB));
        strokeWeight(10);
        rotateX(millis()/1000.0);
        rotateY(millis()/1100.0);
        rotateZ(millis()/1500.0);
        box(120);
    \}
"
  }
  @ ./composite-1 video:composite {
    #%graph.x 513
    #%graph.y 141
    .mode BitXor
    .force-alpha true
  }
  @ ./feedback1 video:custom {
    #%graph.x 259
    #%graph.y 71
    .code "

    @In(1) PImage in;
    
    @P(1) float frameW;
    @P(2) float frameH;
    @P(3) float offsetX;
    @P(4) float offsetY;
    @P(5) float opacity;
    
    @OffScreen PGraphics lastFrame, currentFrame;
    
    @Override
    public void setup() \{

    \}
    
    @Override
    public void draw() \{
        currentFrame.copy(in);
        currentFrame.blendMode(SCREEN, opacity);
        if(lastFrame != null)
            currentFrame.image(
                    lastFrame, 
                    (width - frameW)/2 + offsetX, 
                    (height - frameH)/2 + offsetY, 
                    frameW, 
                    frameH);
        lastFrame.copy(currentFrame);
        copy(currentFrame);
        release(in);
    \}
    
"
    .frame-w 800
    .frame-h 480
    .opacity 0.995
  }
  @ ./fftGet core:custom {
    #%graph.x 536
    #%graph.y 356
    .code "

    @P(0) float\[\] fftData;
    
    @P(1) int channel;
    @Out(1) Output data;
    @Out(2) Output channels;
    
    @Override
    public void init() \{
        
    \}

    
    @Override
    public void update() \{
        if(fftData.length > 0)
            data.send(fftData\[constrain(channel, 0, fftData.length)\]);
        log(INFO, \"Channels: \" + fftData.length);
    \}
    
"
    .fft-data "rO0ABXVyAAJbRgucgYki4AxCAgAAeHAAAAAgPq/YND0ffIA9MOlaPSMrRj0dwIo9JcvyPN1IQjyG
SGw8g5nCPE2CcTxwoFs8s5zFPQJ+0D2gdtk9A/AqPNgc0z0KaDg9Sd4QPbcfmzyAJEM8zYzHPJcW
vDz2e+Q9bn5mPQfKqDxTUlc73rkIO49LqztthHU7VtDzO1EomTtFoVY="
  }
  @ ./line video:gl:p2d {
    #%graph.x 1152
    #%graph.y 248
    .code "

    @P(1) float startX;
    @P(2) float startY;
    @P(3) float endX;
    @P(4) float endY;
    @P(5) float weight;
    
    private float x1, y1, x2, y2, w;
    
    @T(1) void Trigger() \{
        x1 = startX;
        y1 = startY;
        x2 = endX;
        y2 = endY;
        w = weight;
    \}
    
    @Override
    public void setup() \{
        stroke(255);
    \}

    @Override
    public void draw() \{
        strokeWeight(w);
        line(x1, y1, x2, y2);
    \}
"
    .start-y 34.344637393951416
    .end-x 800
    .end-y 34.344637393951416
    .weight 10
  }
  @ ./multiply-1 core:math:multiply {
    #%graph.x 671
    #%graph.y 356
    .value 100
  }
  @ ./variable-1 core:variable {
    #%graph.x 880
    #%graph.y 353
    .value 34.344637393951416
  }
  ~ ./p3d-2!out ./feedback!in
  ~ ./feedback!out ./composite-1!in
  ~ ./p3d-1!out ./feedback1!in
  ~ ./feedback1!out ./composite-1!src
  ~ ./line!out ./screen!in
  ~ ./fftGet!data ./multiply-1!in
  ~ ./multiply-1!out ./variable-1!value
  ~ ./variable-1!out ./line!start-y
  ~ ./variable-1!out ./line!end-y
  ~ ./fftGet!data ./variable-1!trigger
  ~ ./fftGet!data ./line!trigger
  ~ ./composite-1!out ./screen!in
}
